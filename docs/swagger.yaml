definitions:
  github_com_cryptonlx_crypto_src_controllers_mux_user.Ledger:
    properties:
      amount:
        example: "40.1122"
        type: string
      balance:
        example: "2.2324"
        type: string
      created_at:
        example: "2025-06-09T02:02:31.213543+08:00"
        type: string
      entry_type:
        example: credit
        type: string
      id:
        example: 12222214214
        type: integer
      transaction_id:
        example: 1749286345000
        type: integer
      wallet_id:
        example: 1021
        type: integer
    type: object
  github_com_cryptonlx_crypto_src_controllers_mux_user.Transaction:
    properties:
      created_at:
        example: "2025-06-09T02:02:31.213543+08:00"
        type: string
      id:
        example: 1
        type: integer
      ledgers:
        items:
          $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.Ledger'
        type: array
      metadata:
        $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.TransactionMetaData'
      nonce:
        example: 1749460653395
        type: integer
      operation:
        example: deposit
        type: string
      requestor_id:
        example: 1
        type: integer
      status:
        example: success
        type: string
    type: object
  github_com_cryptonlx_crypto_src_controllers_mux_user.TransactionMetaData:
    properties:
      amount:
        example: "40.1122"
        type: string
      source_wallet_id:
        example: 1021
        type: integer
    type: object
  github_com_cryptonlx_crypto_src_controllers_mux_user.User:
    properties:
      id:
        example: 1
        type: integer
      username:
        example: user1
        type: string
    type: object
  github_com_cryptonlx_crypto_src_controllers_mux_user.Wallet:
    properties:
      balance:
        example: "10.000123"
        type: string
      currency:
        example: USD
        type: string
      id:
        example: 1
        type: integer
      user_account_id:
        example: 1
        type: integer
    type: object
  user.CreateUserRequestBody:
    properties:
      username:
        example: user1
        type: string
    type: object
  user.CreateUserResponseBody:
    properties:
      data:
        $ref: '#/definitions/user.CreateUserResponseData'
      error:
        example: ""
        type: string
        x-nullable: true
    type: object
  user.CreateUserResponseData:
    properties:
      user:
        $ref: '#/definitions/user.CreatedUser'
    type: object
  user.CreateWalletRequestBody:
    properties:
      currency:
        example: USD
        type: string
      username:
        example: username1
        type: string
    type: object
  user.CreateWalletResponseBody:
    properties:
      data:
        $ref: '#/definitions/user.CreateWalletResponseData'
      error:
        example: ""
        type: string
        x-nullable: true
    type: object
  user.CreateWalletResponseData:
    properties:
      wallet:
        $ref: '#/definitions/user.CreatedWallet'
    type: object
  user.CreatedUser:
    properties:
      id:
        example: 102
        type: integer
      username:
        example: user1
        type: string
    type: object
  user.CreatedWallet:
    properties:
      balance:
        example: user1
        type: string
      currency:
        example: USD
        type: string
      id:
        example: 1
        type: integer
      user_account_id:
        example: 1
        type: integer
    type: object
  user.DepositRequestBody:
    properties:
      amount:
        example: "10.23"
        type: string
      nonce:
        example: 1749286345000
        type: integer
    type: object
  user.DepositResponseBody:
    properties:
      data:
        $ref: '#/definitions/user.DepositResponseData'
      error:
        example: ""
        type: string
        x-nullable: true
    type: object
  user.DepositResponseData:
    properties:
      transaction:
        $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.Transaction'
    type: object
  user.ErrorResponseBody400:
    properties:
      data:
        example: 0
        type: integer
      error:
        example: error_bad_request
        type: string
    type: object
  user.ErrorResponseBody500:
    properties:
      data:
        example: 0
        type: integer
      error:
        example: internal_server_error
        type: string
    type: object
  user.GetWalletsResponseBody:
    properties:
      data:
        $ref: '#/definitions/user.GetWalletsResponseData'
      error:
        example: ""
        type: string
        x-nullable: true
    type: object
  user.GetWalletsResponseData:
    properties:
      user:
        $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.User'
      wallets:
        items:
          $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.Wallet'
        type: array
    type: object
  user.TransactionsResponseBody:
    properties:
      data:
        $ref: '#/definitions/user.TransactionsResponseData'
      error:
        example: ""
        type: string
        x-nullable: true
    type: object
  user.TransactionsResponseData:
    properties:
      transactions:
        items:
          $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.Transaction'
        type: array
    type: object
  user.TransferRequestBody:
    properties:
      amount:
        example: "10.23"
        type: string
      destination_wallet_id:
        example: 2
        type: integer
      nonce:
        example: 1749286345000
        type: integer
    type: object
  user.TransferResponseBody:
    properties:
      data:
        $ref: '#/definitions/user.TransferResponseData'
      error:
        example: ""
        type: string
        x-nullable: true
    type: object
  user.TransferResponseData:
    properties:
      transaction:
        $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.Transaction'
    type: object
  user.WithdrawLedger:
    properties:
      amount:
        example: "40.1122"
        type: string
      balance:
        example: "2.2324"
        type: string
      created_at:
        example: "2025-06-09T02:02:31.213543+08:00"
        type: string
      entry_type:
        example: debit
        type: string
      id:
        example: 12222214214
        type: integer
      transaction_id:
        example: 1749286345000
        type: integer
      wallet_id:
        example: 1021
        type: integer
    type: object
  user.WithdrawRequestBody:
    properties:
      amount:
        example: "10.23"
        type: string
      nonce:
        example: 1749286345000
        type: integer
    type: object
  user.WithdrawResponseBody:
    properties:
      data:
        $ref: '#/definitions/user.WithdrawResponseData'
      error:
        example: ""
        type: string
        x-nullable: true
    type: object
  user.WithdrawResponseData:
    properties:
      transaction:
        $ref: '#/definitions/user.WithdrawTransaction'
    type: object
  user.WithdrawTransaction:
    properties:
      created_at:
        example: "2025-06-09T02:02:31.213543+08:00"
        type: string
      id:
        example: 1
        type: integer
      ledgers:
        items:
          $ref: '#/definitions/user.WithdrawLedger'
        type: array
      metadata:
        $ref: '#/definitions/github_com_cryptonlx_crypto_src_controllers_mux_user.TransactionMetaData'
      nonce:
        example: 1749460653395
        type: integer
      operation:
        example: withdraw
        type: string
      requestor_id:
        example: 1
        type: integer
      status:
        example: success
        type: string
    type: object
info:
  contact: {}
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: Create User Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.CreateUserResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponseBody400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponseBody500'
      summary: Create a new user.
      tags:
      - user
  /user/{username}/transactions:
    get:
      consumes:
      - application/json
      description: Get transactions of user's wallets sorted by newest.
      parameters:
      - description: username
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.TransactionsResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponseBody400'
      summary: Get transactions of user's wallets sorted by newest.
      tags:
      - user
  /user/{username}/wallets:
    get:
      consumes:
      - application/json
      description: Get balances of user's wallets.
      parameters:
      - description: username
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetWalletsResponseBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponseBody500'
      summary: Get balances of user's wallets.
      tags:
      - user
  /wallet:
    post:
      consumes:
      - application/json
      description: Create a new wallet for user.
      parameters:
      - description: Create Wallet Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateWalletRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.CreateWalletResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponseBody400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponseBody500'
      summary: Create a new wallet for user.
      tags:
      - wallet
  /wallet/{wallet_id}/deposit:
    post:
      consumes:
      - application/json
      description: Deposit to wallet
      parameters:
      - description: Basic Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Wallet Id
        in: path
        name: wallet_id
        required: true
        type: string
      - description: Create Deposit Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.DepositRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.DepositResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponseBody400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponseBody500'
      security:
      - BasicAuth: []
      summary: Deposit to wallet
      tags:
      - wallet
  /wallet/{wallet_id}/transfer:
    post:
      consumes:
      - application/json
      description: Transfer to another wallet.
      parameters:
      - description: Basic Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Wallet Id
        in: path
        name: wallet_id
        required: true
        type: string
      - description: Create Transfer Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.TransferRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.TransferResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponseBody400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponseBody500'
      security:
      - BasicAuth: []
      summary: Transfer to another wallet.
      tags:
      - wallet
  /wallet/{wallet_id}/withdrawal:
    post:
      consumes:
      - application/json
      description: Withdraw from wallet
      parameters:
      - description: Basic Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Wallet Id
        in: path
        name: wallet_id
        required: true
        type: string
      - description: Create Withdraw Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.WithdrawRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.WithdrawResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponseBody400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponseBody500'
      security:
      - BasicAuth: []
      summary: Withdraw from wallet
      tags:
      - wallet
swagger: "2.0"
